<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="DeepPurple" SecondaryColor="Amber"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TabRadioButtonRight" BasedOn="{StaticResource MaterialDesignTabRadioButtonRight}"  TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Secondary}"/>
                <Setter Property="BorderBrush"  Value="{DynamicResource MaterialDesign.Brush.Secondary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FloatingHintTextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0, 10"/>
        <Setter Property="MaxLength" Value="32"/>
    </Style>

    <Style x:Key="FloatingHintPasswordBox" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}" TargetType="PasswordBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0, 10"/>
        <Setter Property="MaxLength" Value="32"/>
    </Style>
    <Style x:Key="RevealPasswordCheckBox" BasedOn="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}" TargetType="CheckBox">
        
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Content">
                <Setter.Value>
                    <TextBlock Text="👁️" Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light}"/>
                </Setter.Value>
            </Setter>
            
        </Style.Setters>
    </Style>
    <Style x:Key="RaisedLightButton" BasedOn="{StaticResource MaterialDesignRaisedLightButton}" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0, 10"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="FlatLightButton" BasedOn="{StaticResource MaterialDesignFlatLightButton}" TargetType="Button">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0, 10"/>
    </Style>

    <Style x:Key="FloatingBorder" TargetType="Border">
        <Style.Setters>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="CornerRadius" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect RenderingBias="Quality" Color="#FF878787" BlurRadius="30" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
</ResourceDictionary>

<!--
 <Style.Setters>
     <Setter Property="Template">
         <Setter.Value>
             <ControlTemplate TargetType="RadioButton">
                 <Border VerticalAlignment="Stretch"
                           HorizontalAlignment="Stretch"
                           Background="{TemplateBinding Background}"
                           BorderThickness="3,0,0,0"
                           Margin="2"
                           CornerRadius="8"
                           BorderBrush="{TemplateBinding BorderBrush}">

                     <ContentPresenter
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                 </Border>
             </ControlTemplate>
         </Setter.Value>
     </Setter>
     
     <Setter Property="BorderBrush" Value="Transparent"/>
     <Setter Property="Background" Value="Transparent"/>
     <Setter Property="BorderThickness" Value="0"/>
 </Style.Setters>
 
 <Style.Triggers>
     <Trigger Property="IsChecked" Value="True">
         <Setter Property="Background" Value="#EEEEEEEE"/>
         <Setter Property="BorderBrush"  Value="Black"/>
     </Trigger>
 </Style.Triggers>
 -->